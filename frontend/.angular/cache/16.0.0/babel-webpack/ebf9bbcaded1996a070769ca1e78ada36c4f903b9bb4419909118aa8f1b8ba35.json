{"ast":null,"code":"//const io = require(\"sails.io.js\")(require(\"socket.io-client\"));\n//import * as io from '../assets/js/sails.io.js';\n//import * as io from \"io\";\nimport socketClient from \"socket.io-client\";\nimport sails from \"sails.io.js\";\nexport class BaseService {\n  constructor() {\n    const io = sails(socketClient);\n    const headers = {\n      \"content-type\": \"application/javascript\"\n    };\n    const _opts = {\n      url: \"http://localhost:1337\",\n      transports: [\"websocket\"],\n      useCORSRouteToGetCookie: \"/__getcookie\",\n      headers: headers,\n      path: \"/socket.io\",\n      credentials: true\n    };\n    console.log(io.connect);\n    io.connect(\"http://localhost:1337\");\n    //io.sails.url = \"http://localhost:1337\";\n    this.socket = io.connect(\"http://localhost:1337\");\n  }\n  get(url, body) {\n    return new Promise((ok, fail) => {\n      this.socket.get(url, body, (response, JWR) => {\n        if (JWR.statusCode >= 400) {\n          fail(JWR);\n        } else {\n          ok(response);\n        }\n      });\n    });\n  }\n}","map":{"version":3,"names":["socketClient","sails","BaseService","constructor","io","headers","_opts","url","transports","useCORSRouteToGetCookie","path","credentials","console","log","connect","socket","get","body","Promise","ok","fail","response","JWR","statusCode"],"sources":["/home/sergio/Projects/8stars-task1/frontend/src/app/app.service.ts"],"sourcesContent":["//const io = require(\"sails.io.js\")(require(\"socket.io-client\"));\n//import * as io from '../assets/js/sails.io.js';\n//import * as io from \"io\";\nimport socketClient from \"socket.io-client\";\nimport sails from \"sails.io.js\";\nexport class BaseService {\n  socket;\n  constructor() {\n    const io = sails(socketClient);\n    const headers = {\n      \"content-type\": \"application/javascript\",\n    };\n\n    const _opts = {\n      url: \"http://localhost:1337\",\n      transports: [\"websocket\"],\n      useCORSRouteToGetCookie: \"/__getcookie\",\n      headers: headers,\n      path: \"/socket.io\",\n      credentials: true,\n    };\n    console.log(io.connect);\n    io.connect(\"http://localhost:1337\");\n    //io.sails.url = \"http://localhost:1337\";\n    this.socket = io.connect(\"http://localhost:1337\");\n  }\n\n  public get(url: string, body?: any): Promise<any> {\n    return new Promise((ok, fail) => {\n      this.socket.get(url, body, (response: any, JWR: any) => {\n        if (JWR.statusCode >= 400) {\n          fail(JWR);\n        } else {\n          ok(response);\n        }\n      });\n    });\n  }\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IACE,MAAMC,EAAE,GAAGH,KAAK,CAACD,YAAY,CAAC;IAC9B,MAAMK,OAAO,GAAG;MACd,cAAc,EAAE;KACjB;IAED,MAAMC,KAAK,GAAG;MACZC,GAAG,EAAE,uBAAuB;MAC5BC,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,uBAAuB,EAAE,cAAc;MACvCJ,OAAO,EAAEA,OAAO;MAChBK,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE;KACd;IACDC,OAAO,CAACC,GAAG,CAACT,EAAE,CAACU,OAAO,CAAC;IACvBV,EAAE,CAACU,OAAO,CAAC,uBAAuB,CAAC;IACnC;IACA,IAAI,CAACC,MAAM,GAAGX,EAAE,CAACU,OAAO,CAAC,uBAAuB,CAAC;EACnD;EAEOE,GAAGA,CAACT,GAAW,EAAEU,IAAU;IAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,EAAE,EAAEC,IAAI,KAAI;MAC9B,IAAI,CAACL,MAAM,CAACC,GAAG,CAACT,GAAG,EAAEU,IAAI,EAAE,CAACI,QAAa,EAAEC,GAAQ,KAAI;QACrD,IAAIA,GAAG,CAACC,UAAU,IAAI,GAAG,EAAE;UACzBH,IAAI,CAACE,GAAG,CAAC;SACV,MAAM;UACLH,EAAE,CAACE,QAAQ,CAAC;;MAEhB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}